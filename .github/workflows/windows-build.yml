# Copyright 2021-2025 The OpenSSL Project Authors. All Rights Reserved.
#
# Licensed under the Apache License 2.0 (the "License").  You may not use
# this file except in compliance with the License.  You can obtain a copy
# in the file LICENSE in the source distribution or at
# https://www.openssl.org/source/license.html

name: Windows Build

on: [pull_request, push, workflow_dispatch]

permissions:
  contents: read

env:
  OPENSSL_VERSION: "3.1.0"

jobs:
  windows-build:
    strategy:
      matrix:
        platform:
          - arch: x64
            os: windows-2022
            target: VC-WIN64A
            config: enable-fips
          - arch: x86
            os: windows-2022
            target: VC-WIN32
            config: --strict-warnings no-fips
    runs-on: ${{ matrix.platform.os }}
    steps:
    - uses: actions/checkout@v4
    - name: checkout fuzz/corpora submodule
      run: git submodule update --init --depth 1 fuzz/corpora
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.platform.arch }}
    - name: install nasm
      run: |
        choco install nasm ${{ matrix.platform.arch == 'x86' && '--x86' || '' }}
        "C:\Program Files${{ matrix.platform.arch == 'x86' && ' (x86)' || '' }}\NASM" | Out-File -FilePath "$env:GITHUB_PATH" -Append
    - name: prepare the build directory
      run: mkdir _build
    - name: config
      working-directory: _build
      run: |
        perl ..\Configure ${{ matrix.platform.target }} --banner=Configured --strict-warnings no-makedepend --prefix="${{ github.workspace }}\openssl-install\${{ matrix.platform.arch }}" -std=gnu17 no-shared ${{ matrix.platform.config }}
        perl configdata.pm --dump
    - name: build
      working-directory: _build
      run: nmake /S
    - name: test
      working-directory: _build
      run: nmake test VERBOSE_FAILURE=yes TESTS=-test_fuzz* HARNESS_JOBS=4
    - name: install
      working-directory: _build
      run: nmake install
    - name: package artifacts
      run: |
        7z a openssl-windows-${{ matrix.platform.arch }}.zip "${{ github.workspace }}\openssl-install\${{ matrix.platform.arch }}\*"
    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openssl-windows-${{ matrix.platform.arch }}
        path: openssl-windows-${{ matrix.platform.arch }}.zip
        retention-days: 30


  windows-combine:
    needs: [windows-build]
    runs-on: windows-2022
    steps:
    - name: download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: create combined package
      run: |
        mkdir combined
        Get-ChildItem -Path artifacts -Filter "*.zip" -Recurse | ForEach-Object {
          7z x $_.FullName -o"combined/"
        }
        7z a openssl-windows-all.zip "combined/*"
    - name: upload combined artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openssl-windows-all
        path: openssl-windows-all.zip
        retention-days: 30